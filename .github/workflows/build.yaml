name: WildFly Liquibase CI

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.groovy'
      - '**.md'
      - '**.sh'
      - '**.template'
      - 'LICENSE.txt'
      - 'Dockerfile'
      - 'Dockerfile.wildfly'
    tags:
      - '*'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.groovy'
      - '**.md'
      - '**.sh'
      - '**.template'
      - 'LICENSE.txt'
      - 'Dockerfile'
      - 'Dockerfile.wildfly'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  license-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout wildfly-liquibase
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11
      - name: Check license headers
        run: ./mvnw process-sources -ntp -B -P licenseCheck

  build:
    needs: license-check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ '8' , '11', '17' ]
        provision: [ 'galleon-provision', 'distro-provision' ]
    steps:
      - name: Checkout wildfly-liquibase
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK ${{ matrix.java }}
        uses: joschi/setup-jdk@v2
        with:
          java-version: ${{ matrix.java }}
      - name: Build JDK ${{ matrix.java }} - ${{ matrix.provision }}
        run: ./mvnw clean install -ntp -B -P examples -P ${{ matrix.provision }}

  docker-image:
    if: contains(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Checkout wildfly-liquibase
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11
      - name: Build distro
        run: ./mvnw -B -ntp clean install -pl distro -am
      - name: Build docker image
        env:
          BUILD_TAG: ${{ steps.release.outputs.tag }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: /bin/bash ./docker-build.sh
